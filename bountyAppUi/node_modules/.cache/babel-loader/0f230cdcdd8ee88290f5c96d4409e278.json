{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\NumberInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNumberInput.propTypes = {\n  value: PropTypes.number,\n  setValue: PropTypes.func.isRequired\n};\nNumberInput.defaultProps = {\n  value: null,\n  setValue: v => {}\n};\nexport default function NumberInput(_ref) {\n  let {\n    value,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"wrapper\",\n    type: \"number\",\n    value: !value ? \" \" : value.toString(),\n    onChange: event => {\n      let newValue = parseFloat(event.target.value);\n      console.log(newValue);\n      console.log(newValue * 100.);\n      console.log(Math.floor(newValue * 100));\n      setValue(isNaN(newValue) ? null : Math.floor(newValue * 100) / 100);\n    },\n    onKeyPress: event => {\n      if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/NumberInput.js"],"names":["React","PropTypes","NumberInput","propTypes","value","number","setValue","func","isRequired","defaultProps","v","toString","event","newValue","parseFloat","target","console","log","Math","floor","isNaN","test","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACpBC,EAAAA,KAAK,EAAEH,SAAS,CAACI,MADG;AAEpBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC;AAFL,CAAxB;AAKAN,WAAW,CAACO,YAAZ,GAA2B;AACvBL,EAAAA,KAAK,EAAE,IADgB;AAEvBE,EAAAA,QAAQ,EAAGI,CAAD,IAAO,CAAE;AAFI,CAA3B;AAKA,eAAe,SAASR,WAAT,OAAwC;AAAA,MAAnB;AAACE,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAmB;AACnD,sBACI;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AACI,IAAA,KAAK,EAAE,CAACF,KAAD,GAAS,GAAT,GAAeA,KAAK,CAACO,QAAN,EAD1B;AAEI,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACf,UAAIC,QAAQ,GAAGC,UAAU,CAACF,KAAK,CAACG,MAAN,CAAaX,KAAd,CAAzB;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,GAAC,IAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,QAAQ,GAAC,GAApB,CAAZ;AACAP,MAAAA,QAAQ,CAACc,KAAK,CAACP,QAAD,CAAL,GAAgB,IAAhB,GAAqBK,IAAI,CAACC,KAAL,CAAWN,QAAQ,GAAC,GAApB,IAAyB,GAA/C,CAAR;AACH,KARL;AASI,IAAA,UAAU,EAAED,KAAK,IAAI;AAAE,UAAG,CAAC,UAAUS,IAAV,CAAeT,KAAK,CAACU,GAArB,CAAJ,EAA+BV,KAAK,CAACW,cAAN;AAAyB;AATnF;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;KAduBrB,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nNumberInput.propTypes = {\r\n    value: PropTypes.number,\r\n    setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nNumberInput.defaultProps = {\r\n    value: null,\r\n    setValue: (v) => {},\r\n};\r\n\r\nexport default function NumberInput({value, setValue}) {\r\n    return(\r\n        <input className='wrapper' type=\"number\"\r\n            value={!value ? \" \" : value.toString() }\r\n            onChange={event => {\r\n                let newValue = parseFloat(event.target.value);\r\n                console.log(newValue);\r\n                console.log(newValue*100.);\r\n                console.log(Math.floor(newValue*100));\r\n                setValue(isNaN(newValue)?null:Math.floor(newValue*100)/100);\r\n            }}\r\n            onKeyPress={event => { if(!/[0-9|.]/.test(event.key)) event.preventDefault(); }}\r\n        />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}