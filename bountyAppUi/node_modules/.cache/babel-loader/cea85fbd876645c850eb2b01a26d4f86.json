{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Row extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.states.squares[this.props.index + i],\n      onClick: () => this.props.handleClick(this.props.index + i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill('_'),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderRow(i) {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      index: i * 3,\n      states: this.state,\n      handleClick: x => this.handleClick(x)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), this.renderRow(0), this.renderRow(1), this.renderRow(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Square","props","onClick","value","Row","Component","renderSquare","i","states","squares","index","handleClick","render","Board","constructor","state","Array","fill","xIsNext","slice","calculateWinner","setState","renderRow","x","winner","status","Game","document","getElementById","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Row extends React.Component {\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.states.squares[this.props.index+i]}\n        onClick={() => this.props.handleClick(this.props.index+i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"board-row\">\n        {this.renderSquare(0)}\n        {this.renderSquare(1)}\n        {this.renderSquare(2)}\n      </div>\n    )\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill('_'),\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if(squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X': 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderRow(i) {\n    return (\n      <Row\n        index={i*3}\n        states={this.state}\n        handleClick={(x) => this.handleClick(x)}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {this.renderRow(0)}\n        {this.renderRow(1)}\n        {this.renderRow(2)}\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{}</div>\n          <ol>{}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}