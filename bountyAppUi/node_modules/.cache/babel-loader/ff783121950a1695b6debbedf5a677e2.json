{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\NumberInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, FormControl, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNumberInput.propTypes = {\n  value: PropTypes.number,\n  setValue: PropTypes.func.isRequired\n};\nNumberInput.defaultProps = {\n  value: null,\n  setValue: v => {}\n};\nexport default function NumberInput(_ref) {\n  let {\n    value,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"balance\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Kontostand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input.Group, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"number\",\n        placeholder: \"Kontostand eingeben\",\n        value: !value ? \" \" : value.toString(),\n        onChange: event => {\n          let newValue = parseFloat(event.target.value);\n          setValue(isNaN(newValue) ? null : Math.floor(newValue * 100 + 0.01) / 100);\n        },\n        onKeyPress: event => {\n          if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"\\u20AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/NumberInput.js"],"names":["React","PropTypes","Form","Input","FormControl","InputGroup","NumberInput","propTypes","value","number","setValue","func","isRequired","defaultProps","v","toString","event","newValue","parseFloat","target","isNaN","Math","floor","test","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,WAArB,EAAkCC,UAAlC,QAAmD,iBAAnD;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACpBC,EAAAA,KAAK,EAAEP,SAAS,CAACQ,MADG;AAEpBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,IAAV,CAAeC;AAFL,CAAxB;AAKAN,WAAW,CAACO,YAAZ,GAA2B;AACvBL,EAAAA,KAAK,EAAE,IADgB;AAEvBE,EAAAA,QAAQ,EAAGI,CAAD,IAAO,CAAE;AAFI,CAA3B;AAKA,eAAe,SAASR,WAAT,OAAwC;AAAA,MAAnB;AAACE,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAmB;AACnD,sBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC,SAAvC;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD,CAAO,KAAP;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,WAAW,EAAC,qBAAvC;AACI,QAAA,KAAK,EAAE,CAACF,KAAD,GAAS,GAAT,GAAeA,KAAK,CAACO,QAAN,EAD1B;AAEI,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACf,cAAIC,QAAQ,GAAGC,UAAU,CAACF,KAAK,CAACG,MAAN,CAAaX,KAAd,CAAzB;AACAE,UAAAA,QAAQ,CAACU,KAAK,CAACH,QAAD,CAAL,GAAgB,IAAhB,GAAqBI,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,GAAT,GAAa,IAAxB,IAA8B,GAApD,CAAR;AACH,SALL;AAMI,QAAA,UAAU,EAAED,KAAK,IAAI;AAAE,cAAG,CAAC,UAAUO,IAAV,CAAeP,KAAK,CAACQ,GAArB,CAAJ,EAA+BR,KAAK,CAACS,cAAN;AAAyB;AANnF;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAjBuBnB,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form, Input, FormControl, InputGroup} from 'react-bootstrap';\r\n\r\nNumberInput.propTypes = {\r\n    value: PropTypes.number,\r\n    setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nNumberInput.defaultProps = {\r\n    value: null,\r\n    setValue: (v) => {},\r\n};\r\n\r\nexport default function NumberInput({value, setValue}) {\r\n    return(\r\n        <Form.Group className=\"mb-3\" controlId=\"balance\">\r\n            <Form.Label>Kontostand</Form.Label>\r\n            <Input.Group>\r\n                <FormControl type=\"number\" placeholder=\"Kontostand eingeben\"\r\n                    value={!value ? \" \" : value.toString() }\r\n                    onChange={event => {\r\n                        let newValue = parseFloat(event.target.value);\r\n                        setValue(isNaN(newValue)?null:Math.floor(newValue*100+0.01)/100);\r\n                    }}\r\n                    onKeyPress={event => { if(!/[0-9|.]/.test(event.key)) event.preventDefault(); }}\r\n                />\r\n                <InputGroup.Text>â‚¬</InputGroup.Text>\r\n            </Input.Group>\r\n        </Form.Group>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}