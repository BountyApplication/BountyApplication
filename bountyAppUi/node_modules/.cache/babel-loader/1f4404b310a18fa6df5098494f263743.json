{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\NumberInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNumberInput.propTypes = {\n  title: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.number.isRequired,\n  setValue: PropTypes.func.isRequired\n};\nNumberInput.defaultProps = {\n  title: \"\",\n  placeholder: ``,\n  value: null,\n  setValue: v => {}\n};\nexport default function NumberInput(_ref) {\n  let {\n    title,\n    placeholder = `${title} eingeben`,\n    value,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"balance\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"number\",\n        placeholder: placeholder,\n        value: !value ? \" \" : value.toString(),\n        onChange: event => {\n          let newValue = parseFloat(event.target.value);\n          setValue(isNaN(newValue) ? null : Math.floor(newValue * 100 + 0.01) / 100);\n        },\n        onKeyPress: event => {\n          if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"\\u20AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/NumberInput.js"],"names":["React","PropTypes","Form","FormControl","InputGroup","NumberInput","propTypes","title","string","placeholder","value","number","isRequired","setValue","func","defaultProps","v","toString","event","newValue","parseFloat","target","isNaN","Math","floor","test","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,UAA3B,QAA4C,iBAA5C;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACpBC,EAAAA,KAAK,EAAEN,SAAS,CAACO,MADG;AAEpBC,EAAAA,WAAW,EAAER,SAAS,CAACO,MAFH;AAGpBE,EAAAA,KAAK,EAAET,SAAS,CAACU,MAAV,CAAiBC,UAHJ;AAIpBC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,IAAV,CAAeF;AAJL,CAAxB;AAOAP,WAAW,CAACU,YAAZ,GAA2B;AACvBR,EAAAA,KAAK,EAAE,EADgB;AAEvBE,EAAAA,WAAW,EAAG,EAFS;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBG,EAAAA,QAAQ,EAAGG,CAAD,IAAO,CAAE;AAJI,CAA3B;AAOA,eAAe,SAASX,WAAT,OAAkF;AAAA,MAA7D;AAACE,IAAAA,KAAD;AAAQE,IAAAA,WAAW,GAAI,GAAEF,KAAM,WAA/B;AAA2CG,IAAAA,KAA3C;AAAkDG,IAAAA;AAAlD,GAA6D;AAC7F,sBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAC,SAAvC;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaN;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,WAAW,EAAEE,WAAxC;AACI,QAAA,KAAK,EAAE,CAACC,KAAD,GAAS,GAAT,GAAeA,KAAK,CAACO,QAAN,EAD1B;AAEI,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACf,cAAIC,QAAQ,GAAGC,UAAU,CAACF,KAAK,CAACG,MAAN,CAAaX,KAAd,CAAzB;AACAG,UAAAA,QAAQ,CAACS,KAAK,CAACH,QAAD,CAAL,GAAgB,IAAhB,GAAqBI,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,GAAT,GAAa,IAAxB,IAA8B,GAApD,CAAR;AACH,SALL;AAMI,QAAA,UAAU,EAAED,KAAK,IAAI;AAAE,cAAG,CAAC,UAAUO,IAAV,CAAeP,KAAK,CAACQ,GAArB,CAAJ,EAA+BR,KAAK,CAACS,cAAN;AAAyB;AANnF;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;KAjBuBtB,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form, FormControl, InputGroup} from 'react-bootstrap';\r\n\r\nNumberInput.propTypes = {\r\n    title: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.number.isRequired,\r\n    setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nNumberInput.defaultProps = {\r\n    title: \"\",\r\n    placeholder: ``,\r\n    value: null,\r\n    setValue: (v) => {},\r\n};\r\n\r\nexport default function NumberInput({title, placeholder = `${title} eingeben`, value, setValue}) {\r\n    return(\r\n        <Form.Group className=\"mb-3\" controlId=\"balance\">\r\n            <Form.Label>{title}</Form.Label>\r\n            <InputGroup>\r\n                <FormControl type=\"number\" placeholder={placeholder}\r\n                    value={!value ? \" \" : value.toString() }\r\n                    onChange={event => {\r\n                        let newValue = parseFloat(event.target.value);\r\n                        setValue(isNaN(newValue)?null:Math.floor(newValue*100+0.01)/100);\r\n                    }}\r\n                    onKeyPress={event => { if(!/[0-9|.]/.test(event.key)) event.preventDefault(); }}\r\n                />\r\n                <InputGroup.Text>â‚¬</InputGroup.Text>\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}