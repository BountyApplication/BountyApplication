{"ast":null,"code":"var _jsxFileName = \"/Users/nicojansen/git/BountyApplication/bountyAppUi/src/bounty/util/NumberInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNumberInput.propTypes = {\n  value: PropTypes.number,\n  setValue: PropTypes.func.isRequired\n};\nNumberInput.defaultProps = {\n  value: null,\n  setValue: v => {}\n};\nexport default function NumberInput(_ref) {\n  let {\n    value,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"wrapper\",\n    type: \"number\",\n    value: !value ? \" \" : value.toString(),\n    onChange: event => {\n      let newValue = parseFloat(event.target.value);\n      setValue(isNaN(newValue) ? null : Math.floor(newValue * 100 + 0.01) / 100);\n    },\n    onKeyPress: event => {\n      if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["/Users/nicojansen/git/BountyApplication/bountyAppUi/src/bounty/util/NumberInput.js"],"names":["React","PropTypes","NumberInput","propTypes","value","number","setValue","func","isRequired","defaultProps","v","toString","event","newValue","parseFloat","target","isNaN","Math","floor","test","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACpBC,EAAAA,KAAK,EAAEH,SAAS,CAACI,MADG;AAEpBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC;AAFL,CAAxB;AAKAN,WAAW,CAACO,YAAZ,GAA2B;AACvBL,EAAAA,KAAK,EAAE,IADgB;AAEvBE,EAAAA,QAAQ,EAAGI,CAAD,IAAO,CAAE;AAFI,CAA3B;AAKA,eAAe,SAASR,WAAT,OAAwC;AAAA,MAAnB;AAACE,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAmB;AACnD,sBACI;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AACI,IAAA,KAAK,EAAE,CAACF,KAAD,GAAS,GAAT,GAAeA,KAAK,CAACO,QAAN,EAD1B;AAEI,IAAA,QAAQ,EAAEC,KAAK,IAAI;AACf,UAAIC,QAAQ,GAAGC,UAAU,CAACF,KAAK,CAACG,MAAN,CAAaX,KAAd,CAAzB;AACAE,MAAAA,QAAQ,CAACU,KAAK,CAACH,QAAD,CAAL,GAAgB,IAAhB,GAAqBI,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAC,GAAT,GAAa,IAAxB,IAA8B,GAApD,CAAR;AACH,KALL;AAMI,IAAA,UAAU,EAAED,KAAK,IAAI;AAAE,UAAG,CAAC,UAAUO,IAAV,CAAeP,KAAK,CAACQ,GAArB,CAAJ,EAA+BR,KAAK,CAACS,cAAN;AAAyB;AANnF;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KAXuBnB,W","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nNumberInput.propTypes = {\n    value: PropTypes.number,\n    setValue: PropTypes.func.isRequired,\n};\n\nNumberInput.defaultProps = {\n    value: null,\n    setValue: (v) => {},\n};\n\nexport default function NumberInput({value, setValue}) {\n    return(\n        <input className='wrapper' type=\"number\"\n            value={!value ? \" \" : value.toString() }\n            onChange={event => {\n                let newValue = parseFloat(event.target.value);\n                setValue(isNaN(newValue)?null:Math.floor(newValue*100+0.01)/100);\n            }}\n            onKeyPress={event => { if(!/[0-9|.]/.test(event.key)) event.preventDefault(); }}\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}