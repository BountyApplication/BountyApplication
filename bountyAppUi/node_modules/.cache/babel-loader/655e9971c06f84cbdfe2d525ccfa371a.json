{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormControl, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nInput.propTypes = {\n  title: PropTypes.string,\n  placeholder: PropTypes.string,\n  value: PropTypes.any.isRequired,\n  setValue: PropTypes.func.isRequired\n};\nInput.defaultProps = {\n  title: \"\",\n  placeholder: null,\n  value: null,\n  setValue: v => {}\n};\nexport default function Input(_ref) {\n  let {\n    type,\n    title,\n    placeholder,\n    value,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: title,\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: type === \"number\" ? \"number\" : \"text\",\n        placeholder: placeholder == null ? `${title} eingeben` : placeholder,\n        value: !value ? \" \" : value.toString(),\n        onChange: event => {\n          if (type !== \"number\") return setValue(event.target.value);\n          let newValue = parseFloat(event.target.value);\n          setValue(isNaN(newValue) ? null : Math.floor(newValue * 100 + 0.01) / 100);\n        },\n        onKeyPress: event => {\n          if (type !== \"number\") return;\n          if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), type === \"number\" && /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        children: \"\\u20AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/Input.js"],"names":["React","PropTypes","Form","FormControl","InputGroup","Input","propTypes","title","string","placeholder","value","any","isRequired","setValue","func","defaultProps","v","type","toString","event","target","newValue","parseFloat","isNaN","Math","floor","test","key","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,UAA3B,QAA4C,iBAA5C;;AAEAC,KAAK,CAACC,SAAN,GAAkB;AACdC,EAAAA,KAAK,EAAEN,SAAS,CAACO,MADH;AAEdC,EAAAA,WAAW,EAAER,SAAS,CAACO,MAFT;AAGdE,EAAAA,KAAK,EAAET,SAAS,CAACU,GAAV,CAAcC,UAHP;AAIdC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,IAAV,CAAeF;AAJX,CAAlB;AAOAP,KAAK,CAACU,YAAN,GAAqB;AACjBR,EAAAA,KAAK,EAAE,EADU;AAEjBE,EAAAA,WAAW,EAAE,IAFI;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBG,EAAAA,QAAQ,EAAGG,CAAD,IAAO,CAAE;AAJF,CAArB;AAOA,eAAe,SAASX,KAAT,OAA4D;AAAA,MAA7C;AAACY,IAAAA,IAAD;AAAOV,IAAAA,KAAP;AAAcE,IAAAA,WAAd;AAA2BC,IAAAA,KAA3B;AAAkCG,IAAAA;AAAlC,GAA6C;AAEvE,sBACI,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,MAAtB;AAA6B,IAAA,SAAS,EAAEN,KAAxC;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,gBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEU,IAAI,KAAG,QAAP,GAAgB,QAAhB,GAAyB,MAA5C;AAAoD,QAAA,WAAW,EAAER,WAAW,IAAE,IAAb,GAAmB,GAAEF,KAAM,WAA3B,GAAsCE,WAAvG;AACI,QAAA,KAAK,EAAE,CAACC,KAAD,GAAS,GAAT,GAAeA,KAAK,CAACQ,QAAN,EAD1B;AAEI,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACf,cAAGF,IAAI,KAAG,QAAV,EAAoB,OAAOJ,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAf;AAEpB,cAAIW,QAAQ,GAAGC,UAAU,CAACH,KAAK,CAACC,MAAN,CAAaV,KAAd,CAAzB;AACAG,UAAAA,QAAQ,CAACU,KAAK,CAACF,QAAD,CAAL,GAAgB,IAAhB,GAAqBG,IAAI,CAACC,KAAL,CAAWJ,QAAQ,GAAC,GAAT,GAAa,IAAxB,IAA8B,GAApD,CAAR;AACH,SAPL;AAQI,QAAA,UAAU,EAAEF,KAAK,IAAI;AACjB,cAAGF,IAAI,KAAG,QAAV,EAAoB;AACpB,cAAG,CAAC,UAAUS,IAAV,CAAeP,KAAK,CAACQ,GAArB,CAAJ,EAA+BR,KAAK,CAACS,cAAN;AAClC;AAXL;AAAA;AAAA;AAAA;AAAA,cADJ,EAcMX,IAAI,KAAG,QAAP,iBAAmB,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;KAvBuBZ,K","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Form, FormControl, InputGroup} from 'react-bootstrap';\r\n\r\nInput.propTypes = {\r\n    title: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.any.isRequired,\r\n    setValue: PropTypes.func.isRequired,\r\n};\r\n\r\nInput.defaultProps = {\r\n    title: \"\",\r\n    placeholder: null,\r\n    value: null,\r\n    setValue: (v) => {},\r\n};\r\n\r\nexport default function Input({type, title, placeholder, value, setValue}) {\r\n\r\n    return(\r\n        <Form.Group className=\"mb-3\" controlId={title}>\r\n            <Form.Label>{title}</Form.Label>\r\n            <InputGroup>\r\n                <FormControl type={type===\"number\"?\"number\":\"text\"} placeholder={placeholder==null?`${title} eingeben`:placeholder}\r\n                    value={!value ? \" \" : value.toString() }\r\n                    onChange={event => {\r\n                        if(type!==\"number\") return setValue(event.target.value);\r\n                        \r\n                        let newValue = parseFloat(event.target.value);\r\n                        setValue(isNaN(newValue)?null:Math.floor(newValue*100+0.01)/100);\r\n                    }}\r\n                    onKeyPress={event => {\r\n                        if(type!==\"number\") return;\r\n                        if(!/[0-9|.]/.test(event.key)) event.preventDefault();\r\n                    }}\r\n                />\r\n                { type===\"number\" && <InputGroup.Text>â‚¬</InputGroup.Text> }\r\n            </InputGroup>\r\n        </Form.Group>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}