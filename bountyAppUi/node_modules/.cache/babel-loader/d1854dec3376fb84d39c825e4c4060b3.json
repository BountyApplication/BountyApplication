{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\UserSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUsers } from './Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nUserSelect.propTypes = {\n  title: PropTypes.string,\n  // callbacks\n  runCallback: PropTypes.func,\n  resetCallback: PropTypes.func,\n  setResetCallback: PropTypes.func,\n  // settings\n  useReset: PropTypes.bool,\n  hideReset: PropTypes.bool,\n  useSubmit: PropTypes.bool,\n  hideSubmit: PropTypes.bool,\n  resetOnSubmit: PropTypes.bool\n};\nUserSelect.defaultProps = {\n  title: \"Suchen\",\n  useReset: false,\n  useSubmit: false,\n  hideReset: false,\n  hideSubmit: false,\n  resetOnSubmit: false\n};\nexport default function UserSelect(_ref) {\n  _s();\n\n  let {\n    title,\n    runCallback,\n    resetCallback,\n    setResetCallback,\n    useReset,\n    hideReset,\n    useSubmit,\n    hideSubmit,\n    resetOnSubmit\n  } = _ref;\n  // vars\n  const [users, setUsers] = useState(getUsers());\n  const [userFirstname, setUserFirstname] = useState(\"\");\n  const [userLastname, setUserLastname] = useState(\"\"); // temp var for easier access\n\n  const filteredUsers = getFilteredUsers();\n  const hasFirstname = userFirstname !== \"\";\n  const hasLastname = userLastname !== \"\"; // set callback on beginning\n\n  useEffect(() => {\n    if (setResetCallback != null) setResetCallback(() => reset);\n  }, []); // if username input changes, checks for autocomplete or run (if complete)\n\n  useEffect(() => {\n    // if complete\n    if (hasFirstname && hasLastname) run();else checkAutoComplete();\n  }, [userFirstname, userLastname]);\n\n  function updateName(isFirstname, name) {\n    if (name === \"\") return reset();\n    if (isFirstname) setUserFirstname(name);else setUserLastname(name);\n  }\n\n  function checkAutoComplete() {\n    if (filteredUsers.length > 1) return;\n    if (hasFirstname && !hasLastname) return setUserLastname(findUser(true, userFirstname).lastname);\n    if (!hasFirstname && hasLastname) return setUserFirstname(findUser(false, userLastname).firstname);\n  }\n\n  function getFilteredUsers() {\n    return users.filter(_ref2 => {\n      let {\n        lastname,\n        firstname\n      } = _ref2;\n      return (!hasFirstname || userFirstname === firstname) && (!hasLastname || userLastname === lastname);\n    });\n  }\n\n  function getUniqueUsers(isFirstname) {\n    return filteredUsers.filter(_ref3 => {\n      let {\n        id,\n        firstname,\n        lastname\n      } = _ref3;\n      return findUser(isFirstname, isFirstname ? firstname : lastname).id === id;\n    });\n  }\n\n  function getSortedUsers(isFirstname) {\n    return getUniqueUsers(isFirstname).sort((user1, user2) => compareNames(isFirstname ? user1.firstname : user1.lastname, isFirstname ? user2.firstname : user2.lastname));\n  }\n\n  function findUser(isFirstname, name) {\n    return filteredUsers.find(_ref4 => {\n      let {\n        firstname,\n        lastname\n      } = _ref4;\n      return (isFirstname ? firstname : lastname) === name;\n    });\n  }\n\n  function compareNames(name1, name2) {\n    return name1.toLowerCase().localeCompare(name2.toLowerCase());\n  }\n\n  function run() {\n    console.log(`${userFirstname} ${userLastname}`);\n    if (!useSubmit) submit();\n  }\n\n  function submit() {\n    if (getFilteredUsers().length !== 1) {\n      console.log(`Error: user selection ambiguous`);\n      window.alert(`Error: user selection ambiguous`);\n      return;\n    }\n\n    if (runCallback != null) runCallback(getFilteredUsers()[0]);\n    if (resetOnSubmit) reset();\n  }\n\n  function reset() {\n    setUserFirstname(\"\");\n    setUserLastname(\"\");\n    if (resetCallback != null) resetCallback();\n  }\n\n  function nameSelectUi(isFirstname) {\n    let userName = isFirstname ? userFirstname : userLastname;\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      value: userName,\n      onChange: event => updateName(isFirstname, event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: userName !== \"\" ? \"delete\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), getSortedUsers(isFirstname).map(_ref5 => {\n        let {\n          id,\n          firstname,\n          lastname\n        } = _ref5;\n        let name = isFirstname ? firstname : lastname;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 130\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rubric\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [\"Vorname \", nameSelectUi(true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [\"Nachname \", nameSelectUi(false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), useReset && (!hideReset || hasFirstname || hasLastname) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wrapper\",\n      onClick: reset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 77\n    }, this), useSubmit && (!hideSubmit || filteredUsers.length === 1) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wrapper\",\n      onClick: submit,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 89\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserSelect, \"UiFLX2g40NggDjCOQ7u07ECzcoY=\");\n\n_c = UserSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSelect\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/UserSelect.js"],"names":["React","useState","useEffect","PropTypes","getUsers","UserSelect","propTypes","title","string","runCallback","func","resetCallback","setResetCallback","useReset","bool","hideReset","useSubmit","hideSubmit","resetOnSubmit","defaultProps","users","setUsers","userFirstname","setUserFirstname","userLastname","setUserLastname","filteredUsers","getFilteredUsers","hasFirstname","hasLastname","reset","run","checkAutoComplete","updateName","isFirstname","name","length","findUser","lastname","firstname","filter","getUniqueUsers","id","getSortedUsers","sort","user1","user2","compareNames","find","name1","name2","toLowerCase","localeCompare","console","log","submit","window","alert","nameSelectUi","userName","event","target","value","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getUsers } from './Database';\r\n\r\nUserSelect.propTypes = {\r\n    title: PropTypes.string,\r\n\r\n    // callbacks\r\n    runCallback: PropTypes.func,\r\n    resetCallback: PropTypes.func,\r\n    setResetCallback: PropTypes.func,\r\n\r\n    // settings\r\n    useReset: PropTypes.bool,\r\n    hideReset: PropTypes.bool,\r\n    useSubmit: PropTypes.bool,\r\n    hideSubmit: PropTypes.bool,\r\n    resetOnSubmit: PropTypes.bool,    \r\n}\r\n\r\nUserSelect.defaultProps = {\r\n    title: \"Suchen\",\r\n\r\n    useReset: false,\r\n    useSubmit: false,\r\n\r\n    hideReset: false,\r\n    hideSubmit: false,\r\n\r\n    resetOnSubmit: false,\r\n}\r\n\r\nexport default function UserSelect({title, runCallback, resetCallback, setResetCallback, useReset, hideReset, useSubmit, hideSubmit, resetOnSubmit}) {\r\n    // vars\r\n    const [users, setUsers] = useState(getUsers());\r\n    const [userFirstname, setUserFirstname] = useState(\"\");\r\n    const [userLastname, setUserLastname] = useState(\"\");\r\n\r\n    // temp var for easier access\r\n    const filteredUsers = getFilteredUsers();\r\n    const hasFirstname = userFirstname !== \"\";\r\n    const hasLastname = userLastname !== \"\";\r\n\r\n    // set callback on beginning\r\n    useEffect(() => {\r\n      if(setResetCallback!=null)\r\n        setResetCallback(()=>reset);\r\n    }, []);\r\n\r\n    // if username input changes, checks for autocomplete or run (if complete)\r\n    useEffect(() => {\r\n        // if complete\r\n        if(hasFirstname && hasLastname)\r\n            run();\r\n        else\r\n            checkAutoComplete();\r\n    }, [userFirstname, userLastname]);\r\n\r\n\r\n    function updateName(isFirstname, name) {\r\n        if(name === \"\")\r\n            return reset();\r\n\r\n        if(isFirstname)\r\n            setUserFirstname(name);\r\n        else\r\n            setUserLastname(name);\r\n    }\r\n\r\n    function checkAutoComplete() {\r\n        if(filteredUsers.length > 1)\r\n            return;\r\n\r\n        if(hasFirstname && !hasLastname)\r\n            return setUserLastname(findUser(true, userFirstname).lastname);\r\n        if(!hasFirstname && hasLastname)\r\n            return setUserFirstname(findUser(false, userLastname).firstname);\r\n    }\r\n\r\n    function getFilteredUsers() {\r\n        return users.filter(({lastname, firstname}) => (!hasFirstname || userFirstname===firstname) && (!hasLastname || userLastname===lastname));\r\n    }\r\n\r\n    function getUniqueUsers(isFirstname) {\r\n        return filteredUsers.filter(({id, firstname, lastname}) => findUser(isFirstname, isFirstname?firstname:lastname).id===id);\r\n    }\r\n\r\n    function getSortedUsers(isFirstname) {\r\n        return getUniqueUsers(isFirstname).sort((user1, user2) => compareNames(isFirstname?user1.firstname:user1.lastname, isFirstname?user2.firstname:user2.lastname));\r\n    }\r\n\r\n    function findUser(isFirstname, name) {\r\n        return filteredUsers.find(({firstname, lastname}) => (isFirstname?firstname:lastname)===name);\r\n    }\r\n\r\n    function compareNames(name1, name2) {\r\n        return name1.toLowerCase().localeCompare(name2.toLowerCase());\r\n    }\r\n\r\n    function run() {\r\n        console.log(`${userFirstname} ${userLastname}`);\r\n        if(!useSubmit)\r\n            submit();\r\n    }\r\n\r\n    function submit() {\r\n        if(getFilteredUsers().length!==1) {\r\n            console.log(`Error: user selection ambiguous`);\r\n            window.alert(`Error: user selection ambiguous`);\r\n            return;\r\n        }\r\n\r\n        if(runCallback!=null)\r\n            runCallback(getFilteredUsers()[0]);\r\n\r\n        if(resetOnSubmit)\r\n            reset();\r\n    }\r\n\r\n    function reset() {\r\n        setUserFirstname(\"\");\r\n        setUserLastname(\"\");\r\n        if(resetCallback!=null)\r\n            resetCallback();\r\n    }\r\n\r\n    function nameSelectUi(isFirstname) {\r\n        let userName = isFirstname?userFirstname:userLastname;\r\n        return(\r\n            <select value={userName} onChange={event => updateName(isFirstname, event.target.value)}>\r\n                <option value=\"\">{userName!==\"\"?\"delete\":\"\"}</option>\r\n                {getSortedUsers(isFirstname).map(({id, firstname, lastname}) => {let name=isFirstname?firstname:lastname; return <option key={id} value={name}>{name}</option>})}\r\n            </select>\r\n        );\r\n    }\r\n    \r\n    return(\r\n        <div className=\"rubric\">\r\n            <div className='title'>{title}</div>\r\n            <div className='wrapper'>\r\n                {\"Vorname \"}{nameSelectUi(true)}\r\n            </div>\r\n            <div className='wrapper'>\r\n                {\"Nachname \"}{nameSelectUi(false)}\r\n            </div>\r\n            {useReset  && (!hideReset  || hasFirstname || hasLastname) &&   <button className='wrapper' onClick={reset}>{\"reset\"}</button>}\r\n            {useSubmit && (!hideSubmit || filteredUsers.length===1) &&                  <button className='wrapper' onClick={submit}>{\"submit\"}</button>}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}