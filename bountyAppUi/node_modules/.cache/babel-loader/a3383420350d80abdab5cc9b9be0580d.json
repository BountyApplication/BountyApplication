{"ast":null,"code":"import { getUserBalance } from \"./Database\";\nimport { useState } from \"react\";\nexport default class User {\n  constructor(id, first, last) {\n    this.id = id; // this.firstname = firstname;\n    // this.lastname = lastname;\n\n    const [firstname, setFirstname] = useState(first);\n    const [lastname, setLastname] = uLaState(last);\n    const [balance, setBalance] = useState(null);\n  }\n\n  getBalance() {\n    this.setBalance(getUserBalance());\n  }\n\n  getName(isFirstname) {\n    if (isFirstname) return this.firstname;\n    return this.lastname;\n  }\n\n  setFirstname(name) {\n    // this.firstname = name;\n    // this.updater();\n    this.setFirstname(name);\n  }\n\n  setLastname(name) {\n    // this.lastname = name;\n    // this.updater();\n    this.setLastname(name);\n  }\n\n  setBalance(balance) {\n    // this.balance = balance;\n    // this.updater();\n    this.setBalance(balance);\n  }\n\n  toString() {\n    return `${this.firstname} ${this.lastname}${this.balance ? ` (${this.balance}€)` : ``}`;\n  }\n\n  log() {\n    console.log(this.toString());\n  }\n\n  setUpdater(func) {\n    this.updater = func;\n  }\n\n  clone() {\n    return new User(this.id, this.firstname, this.lastname, this.balance);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/User.js"],"names":["getUserBalance","useState","User","constructor","id","first","last","firstname","setFirstname","lastname","setLastname","uLaState","balance","setBalance","getBalance","getName","isFirstname","name","toString","log","console","setUpdater","func","updater","clone"],"mappings":"AAAA,SAASA,cAAT,QAA+B,YAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,MAAMC,IAAN,CAAW;AACtBC,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAYC,IAAZ,EAAkB;AACzB,SAAKF,EAAL,GAAUA,EAAV,CADyB,CAEzB;AACA;;AACA,UAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACI,KAAD,CAA1C;AACA,UAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAACL,IAAD,CAAxC;AACA,UAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACH;;AAEDa,EAAAA,UAAU,GAAG;AACT,SAAKD,UAAL,CAAgBb,cAAc,EAA9B;AACH;;AAEDe,EAAAA,OAAO,CAACC,WAAD,EAAc;AACjB,QAAGA,WAAH,EAAgB,OAAO,KAAKT,SAAZ;AAChB,WAAO,KAAKE,QAAZ;AACH;;AAEDD,EAAAA,YAAY,CAACS,IAAD,EAAO;AACf;AACA;AACA,SAAKT,YAAL,CAAkBS,IAAlB;AACH;;AAEDP,EAAAA,WAAW,CAACO,IAAD,EAAO;AACd;AACA;AACA,SAAKP,WAAL,CAAiBO,IAAjB;AACH;;AAEDJ,EAAAA,UAAU,CAACD,OAAD,EAAU;AAChB;AACA;AACA,SAAKC,UAAL,CAAgBD,OAAhB;AACH;;AAEDM,EAAAA,QAAQ,GAAG;AACP,WAAQ,GAAE,KAAKX,SAAU,IAAG,KAAKE,QAAS,GAAE,KAAKG,OAAL,GAAc,KAAI,KAAKA,OAAQ,IAA/B,GAAoC,EAAE,EAAlF;AACH;;AAEDO,EAAAA,GAAG,GAAG;AACFC,IAAAA,OAAO,CAACD,GAAR,CAAY,KAAKD,QAAL,EAAZ;AACH;;AAEDG,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,SAAKC,OAAL,GAAeD,IAAf;AACH;;AAEDE,EAAAA,KAAK,GAAG;AACJ,WAAO,IAAItB,IAAJ,CAAS,KAAKE,EAAd,EAAkB,KAAKG,SAAvB,EAAkC,KAAKE,QAAvC,EAAiD,KAAKG,OAAtD,CAAP;AACH;;AAnDqB","sourcesContent":["import { getUserBalance } from \"./Database\";\r\nimport { useState } from \"react\";\r\n\r\nexport default class User {\r\n    constructor(id, first, last) {\r\n        this.id = id;\r\n        // this.firstname = firstname;\r\n        // this.lastname = lastname;\r\n        const [firstname, setFirstname] = useState(first);\r\n        const [lastname, setLastname] = uLaState(last);\r\n        const [balance, setBalance] = useState(null);\r\n    }\r\n\r\n    getBalance() {\r\n        this.setBalance(getUserBalance());\r\n    }\r\n\r\n    getName(isFirstname) {\r\n        if(isFirstname) return this.firstname;\r\n        return this.lastname;\r\n    }\r\n\r\n    setFirstname(name) {\r\n        // this.firstname = name;\r\n        // this.updater();\r\n        this.setFirstname(name);\r\n    }\r\n\r\n    setLastname(name) {\r\n        // this.lastname = name;\r\n        // this.updater();\r\n        this.setLastname(name);\r\n    }\r\n\r\n    setBalance(balance) {\r\n        // this.balance = balance;\r\n        // this.updater();\r\n        this.setBalance(balance);\r\n    }\r\n\r\n    toString() {\r\n        return `${this.firstname} ${this.lastname}${this.balance?` (${this.balance}€)`:``}`;\r\n    }\r\n\r\n    log() {\r\n        console.log(this.toString());\r\n    }\r\n  \r\n    setUpdater(func) {\r\n        this.updater = func;\r\n    }\r\n\r\n    clone() {\r\n        return new User(this.id, this.firstname, this.lastname, this.balance);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}