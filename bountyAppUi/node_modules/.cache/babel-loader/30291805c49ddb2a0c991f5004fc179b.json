{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\generalUi\\\\ProductDisplay.js\";\nimport React from 'react';\nimport Product from './Product';\nimport PropTypes from \"prop-types\";\nimport { Card, CardGroup, Row, Col } from 'react-bootstrap';\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProductDisplay.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    price: PropTypes.number,\n    amount: PropTypes.number\n  })).isRequired,\n  setProducts: PropTypes.func.isRequired,\n  tryRemove: PropTypes.bool\n};\nProductDisplay.defaultProps = {\n  products: [],\n  setProducts: p => {},\n  tryRemove: false\n};\nexport default function ProductDisplay(_ref) {\n  let {\n    products,\n    setProducts,\n    tryRemove\n  } = _ref;\n\n  const updateProductAmount = (id, amount) => {\n    const product = products.find(product => product.id === id);\n\n    if (product) {\n      const updatedProduct = { ...product,\n        amount\n      };\n      const updatedProducts = products.map(product => product.id === id ? updatedProduct : product);\n      setProducts(updatedProducts);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"border\">\n    //     <div className='title'>{\"Einkaufen\"}</div>\n    //     <div className='wrapper'>\n    _jsxDEV(Card, {\n      md: true,\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Einkaufen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Einkaufen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: products.map(_ref2 => {\n            let {\n              id,\n              name,\n              price,\n              amount\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(Product, {\n              tryRemove: tryRemove,\n              id: id,\n              name: name,\n              price: price,\n              amount: amount,\n              setAmount: updateProductAmount\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = ProductDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDisplay\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/generalUi/ProductDisplay.js"],"names":["React","Product","PropTypes","Card","CardGroup","Row","Col","CardHeader","ProductDisplay","propTypes","products","arrayOf","shape","id","number","name","string","price","amount","isRequired","setProducts","func","tryRemove","bool","defaultProps","p","updateProductAmount","product","find","updatedProduct","updatedProducts","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,iBAA1C;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACvBC,EAAAA,QAAQ,EAAER,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,KAAV,CAAgB;AACxCC,IAAAA,EAAE,EAAEX,SAAS,CAACY,MAD0B;AAExCC,IAAAA,IAAI,EAAEb,SAAS,CAACc,MAFwB;AAGxCC,IAAAA,KAAK,EAAEf,SAAS,CAACY,MAHuB;AAIxCI,IAAAA,MAAM,EAAEhB,SAAS,CAACY;AAJsB,GAAhB,CAAlB,EAKNK,UANmB;AAOvBC,EAAAA,WAAW,EAAElB,SAAS,CAACmB,IAAV,CAAeF,UAPL;AAQvBG,EAAAA,SAAS,EAAEpB,SAAS,CAACqB;AARE,CAA3B;AAWAf,cAAc,CAACgB,YAAf,GAA8B;AAC1Bd,EAAAA,QAAQ,EAAE,EADgB;AAE1BU,EAAAA,WAAW,EAAGK,CAAD,IAAO,CAAE,CAFI;AAG1BH,EAAAA,SAAS,EAAE;AAHe,CAA9B;AAMA,eAAe,SAASd,cAAT,OAA4D;AAAA,MAApC;AAACE,IAAAA,QAAD;AAAWU,IAAAA,WAAX;AAAwBE,IAAAA;AAAxB,GAAoC;;AACvE,QAAMI,mBAAmB,GAAG,CAACb,EAAD,EAAKK,MAAL,KAAgB;AACxC,UAAMS,OAAO,GAAGjB,QAAQ,CAACkB,IAAT,CAAcD,OAAO,IAAIA,OAAO,CAACd,EAAR,KAAeA,EAAxC,CAAhB;;AACA,QAAIc,OAAJ,EAAa;AACT,YAAME,cAAc,GAAG,EAAE,GAAGF,OAAL;AAAcT,QAAAA;AAAd,OAAvB;AACA,YAAMY,eAAe,GAAGpB,QAAQ,CAACqB,GAAT,CAAaJ,OAAO,IAAIA,OAAO,CAACd,EAAR,KAAaA,EAAb,GAAkBgB,cAAlB,GAAmCF,OAA3D,CAAxB;AACAP,MAAAA,WAAW,CAACU,eAAD,CAAX;AACH;AACJ,GAPD;;AASA;AAAA;AACI;AACA;AACA;AACA,YAAC,IAAD;AAAM,MAAA,EAAE,MAAR;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,kBAAc;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAa;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAA,oBACCpB,QAAQ,CAACqB,GAAT,CAAa,SAA+B;AAAA,gBAA9B;AAAClB,cAAAA,EAAD;AAAKE,cAAAA,IAAL;AAAWE,cAAAA,KAAX;AAAkBC,cAAAA;AAAlB,aAA8B;AACzC,gCAAO,QAAC,OAAD;AAAS,cAAA,SAAS,EAAEI,SAApB;AAAwC,cAAA,EAAE,EAAET,EAA5C;AAAgD,cAAA,IAAI,EAAEE,IAAtD;AAA4D,cAAA,KAAK,EAAEE,KAAnE;AAA0E,cAAA,MAAM,EAAEC,MAAlF;AAA0F,cAAA,SAAS,EAAEQ;AAArG,eAAoCb,EAApC;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAmBH;KA7BuBL,c","sourcesContent":["import React from 'react';\r\nimport Product from './Product';\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, CardGroup, Row, Col } from 'react-bootstrap';\r\nimport CardHeader from 'react-bootstrap/esm/CardHeader';\r\n\r\nProductDisplay.propTypes = {\r\n    products: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n        price: PropTypes.number,\r\n        amount: PropTypes.number\r\n    })).isRequired,\r\n    setProducts: PropTypes.func.isRequired,\r\n    tryRemove: PropTypes.bool,\r\n};\r\n\r\nProductDisplay.defaultProps = {\r\n    products: [],\r\n    setProducts: (p) => {},\r\n    tryRemove: false,\r\n};\r\n\r\nexport default function ProductDisplay({products, setProducts, tryRemove}) {\r\n    const updateProductAmount = (id, amount) => {\r\n        const product = products.find(product => product.id === id);\r\n        if (product) {\r\n            const updatedProduct = { ...product, amount };\r\n            const updatedProducts = products.map(product => product.id===id ? updatedProduct : product)\r\n            setProducts(updatedProducts);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        // <div className=\"border\">\r\n        //     <div className='title'>{\"Einkaufen\"}</div>\r\n        //     <div className='wrapper'>\r\n        <Card md>\r\n            <Card.Header>{\"Einkaufen\"}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title>{\"Einkaufen\"}</Card.Title>\r\n                <Row>\r\n                {products.map(({id, name, price, amount}) => { \r\n                    return <Product tryRemove={tryRemove} key={id} id={id} name={name} price={price} amount={amount} setAmount={updateProductAmount}/>\r\n                })}\r\n                </Row>\r\n            {/* </div>\r\n        </div> */}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}