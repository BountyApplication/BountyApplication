{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaja\\\\my-app\\\\bountyAppUi\\\\src\\\\bounty\\\\util\\\\NumberInput.js\";\n// import '../App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NumberInput(props) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"wrapper\",\n    type: \"number\",\n    value: props.value === null ? \" \" : props.value.toString(),\n    onChange: event => {\n      props.setValue(isNaN(parseFloat(event.target.value)) ? null : Math.floor(parseFloat(event.target.value) * 100) / 100);\n    },\n    onKeyPress: event => {\n      if (!/[0-9|.]/.test(event.key)) event.preventDefault();\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"sources":["C:/Users/Isaja/my-app/bountyAppUi/src/bounty/util/NumberInput.js"],"names":["React","NumberInput","props","value","toString","event","setValue","isNaN","parseFloat","target","Math","floor","test","key","preventDefault"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,sBACI;AAAO,IAAA,SAAS,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,KAAN,KAAc,IAAd,GAAmB,GAAnB,GAAuBD,KAAK,CAACC,KAAN,CAAYC,QAAZ,EADlC;AAEI,IAAA,QAAQ,EAAEC,KAAK,IAAE;AAACH,MAAAA,KAAK,CAACI,QAAN,CAAeC,KAAK,CAACC,UAAU,CAACH,KAAK,CAACI,MAAN,CAAaN,KAAd,CAAX,CAAL,GAAsC,IAAtC,GAA2CO,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACH,KAAK,CAACI,MAAN,CAAaN,KAAd,CAAV,GAA+B,GAA1C,IAA+C,GAAzG;AAA+G,KAFrI;AAGI,IAAA,UAAU,EAAGE,KAAD,IAAS;AAAC,UAAG,CAAC,UAAUO,IAAV,CAAeP,KAAK,CAACQ,GAArB,CAAJ,EAA+BR,KAAK,CAACS,cAAN;AAAwB;AAHjF;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;KARuBb,W","sourcesContent":["// import '../App.css';\r\nimport React from 'react';\r\n\r\nexport default function NumberInput(props) {\r\n    return(\r\n        <input className='wrapper' type=\"number\"\r\n            value={props.value===null?\" \":props.value.toString()}\r\n            onChange={event=>{props.setValue(isNaN(parseFloat(event.target.value))?null:Math.floor(parseFloat(event.target.value)*100)/100);}}\r\n            onKeyPress={(event)=>{if(!/[0-9|.]/.test(event.key)) event.preventDefault();}}\r\n        />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}